name: Splunk App CI/CD 2

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"
          architecture: "x64"
      - run: pip install -r requirements.txt

      - name: Generate Addon
        run: |
          echo "Version is now calculated by ucc-gen"
          ucc-gen build -o output -v
          mv output/$(basename $(pwd)) output/app

      - name: Generating package
        run: |
          set -x
          rm -rf output/app/lib/3rdparty/**/*.pyc || true
          rm -rf output/app/lib/__pycache__ || true
          mkdir -p dist
          ucc-gen package -o dist --path output/app
          
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  appinspect:
    name: quality-appinspect-${{ matrix.tags }}
    needs: package
    # if: ${{ !cancelled() && needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tags:
          - "cloud"
          - "private_victoria"
          - "future"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Scan
        uses: splunk/appinspect-cli-action@v1.9
        with:
          app_path: dist/
          included_tags: ${{ matrix.tags }}
          result_file: appinspect_result_${{ matrix.tags }}.json
      - name: upload-appinspect-report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: appinspect_${{ matrix.tags }}_checks.json
          path: appinspect_result_${{ matrix.tags }}.json
      - name: upload-markdown
        if: matrix.tags == 'manual'
        uses: actions/upload-artifact@v4
        with:
          name: check_markdown
          path: |
            *_markdown.txt
            
  appinspectapi:
    name: quality-appinspect-api
    needs: package
    # if: ${{ !cancelled() && needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
  
      - uses: splunk/appinspect-api-action@v3.0
        name: "AppInspect API"
        with:
          username: ${{ secrets.SPLUNKBASE_USERNAME }}
          password: ${{ secrets.SPLUNKBASE_PASSWORD }}
          app_path: dist
          included_tags: "private_victoria"
          excluded_tags: "offensive"
  
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

  publish-gh:
    needs: 
      - package
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    container: cimg/go:1.19
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          allowUpdates: true
